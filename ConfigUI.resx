<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="label3.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABgAAAAYCAYAAADgdz34AAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAFUSURBVEhL7dRhUcRADIbhSkACEk4CEpCABCScAyQgAQlIQAISkAD7QL+btLfbHvf73plM22yS
        TbLZTjeu5dDk2ORtfj43qdw1oXtp8tqEDZ9dOHL6bvLV5GN+z/dTk4cmn0VXbfhuIuMY2iwIWgN5l3G1
        UYW199+vDrJjsG5HxRqpgSuPTcQQ6wxlqyCkFf9FDK1bICM7KzPItJcNm/u/1y7pxMImGygx5DxqNvpO
        t1WZytl4LhBI0PQ534yNImRPH11sa7axOTsnDhwjjGQRvSA5J5NSbemCtfp9IhMgI7sng7QvY5o2xqba
        8k2MLmnJ+lZmxrulz/CxnnZ24awNDNeoYOTMzzrfUQInMim9Po6cc051CjdJS4bXfsaGCb77H1qTA1N6
        72LRSUA7h4e6Rw6O1IuT3wj9xW0ZIdOMqIB5H1V2NTLVb4fvf7M7LTcuYJp+AM9tdQJEZYlMAAAAAElF
        TkSuQmCC
</value>
  </data>
  <data name="label2.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABgAAAAYCAYAAADgdz34AAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAADVSURBVEhL7ZSBDYJADEVvBEdwBEZwBEdwBEdwA0dwBEdwBEdwBEbQ/4CSkphcKxoSw09eAqHt
        h7ZcWVIbsQtCbFpb8RSPCsQ0Ii0zqL1d2uAiruImogbEkgNVtQKT00BNFkcOZm91FL6nDC4r2kSu1aHm
        KN7gLvYDn2wFOZZPyyZfz02of0FZi0f9nwFDZiYmBnbuLztRwA+RWP8vhAxYVxPF/HOufQG2xm/earAa
        9Ee1X0uSMTEdBEeCifzUms7VMgb+qJ0L85sY0D87ar8Fc/y1SnkBYFZ+BmAHS9sAAAAASUVORK5CYII=
</value>
  </data>
  <data name="label1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABgAAAAYCAYAAADgdz34AAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAGBSURBVEhLrdQLUcRAEATQSEACEpCABCQgAQk4QAISkIAEJCDhJMC81M3WZi5/6Kquu03m2zOb
        4QDugg/Bx+vvv0DQ1+BX8BL8KfwMvgXvg4fxEhQUBZIoq38KPgffg5lMol1QdToKvFVdb6/TVXvGH0FV
        68B5L3SUHS/6aVMlJDgD1WfnN6DvIS0XoHNxdDQBab6DR2RZgg5I1SCorLL3cO4r0Z1CetquOtiUqkkt
        iAfV0HYIkLAlzhxzVSXhWy8fNfiP4ORBxVyCuQVgJ1EP5zZsBnOT35uATfUnZyv6LwnMT6DeDviyHyHb
        ZOpXzCUQTDHoTH//6/ZNJDoyZJvlzuR3qfokFNLuVK5pvRx7JJqDxOJNbDlXmc4mIM/NNymzCpo4kyA/
        FfXSjhDQS/pC6pwQfElz8E7lCqlDb/Bybh5bUIzB4loRY2brJYnfVeMAe9vCXnFb9g2pJZJOR6oUgGzk
        yttKFjaLsiyBgyGnbJUCS9LP6TQk04HKBdwRdBh+ASovht2+ExP8AAAAAElFTkSuQmCC
</value>
  </data>
</root>